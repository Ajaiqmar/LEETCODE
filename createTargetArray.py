# THE PROBLEM STATEMENT IS TO RETURN THE TARGET ARRAY. THE TARGET ARRAY IS FORMED BY INSERTING NUMS[I] ELEMENT AT INDEX[I] POSITION.

# MY APPROACH WAS TO USE THE IN-BUILT PYTHON FUNCTION.
# BUT ANOTHER APPROACH IS WE TRAVERSE THROUGH THE ARRAY AND THEN WE BUMP ALL THE ELEMENTS WHOSE INDEX IS GREATER THAN INDEX[I] BY ONE POSITION
# THEN ADD THE ELEMENT NUMS[I] AT INDEX[I].

class Solution:
    def createTargetArray(self, nums: List[int], index: List[int]) -> List[int]:
        target = []
        
        # TRAVERSING THE NUMS AND INDEX ARRAY AND INSERTING THE ELEMENT INTO THE TARGET ARRAY USING INSERT FUNCTION
        for i in range(len(nums)):
            target.insert(index[i],nums[i])
        
        return target
        
# TIME COMPLEXITY : O(N*N) (FOR BOTH THE APPROACH) IS THE BEST COMPLEXITY THAT IN COULD COME UP WITH.
# SPACE COMPLEXITY : O(N)
