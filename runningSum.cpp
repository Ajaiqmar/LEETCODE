// THE PROBLEM STATEMENT IS TO RETURN THE RUNNING SUM ARRAY OF THE GIVEN ARRAY.
// RUNNING SUM ARRAY IS THE ONE IN WHICH THE VALUE AT EACH INDEX IS EQUAL THE SUM OF ALL THE INTEGERS FROM THE ZERO INDEX TO THE
// CURRENT INDEX.

// MY APPROACH IS TO USE DYNAMIC PROGRAMMING BY START TRAVERSING THE GIVEN ARRAY FROM THE INDEX 1 AND AT EACH INDEX ADD ARR[I] = ARR[I]+ARR[I-1].
// THIS WILL CREATE THE RUNNING SUM ARRAY.

class Solution {
public:
    vector<int> runningSum(vector<int>& nums) {
        // TRAVERSING THE GIVEN ARRAY.
        for(int i=1;i<nums.size();i++)
        {
            nums[i] += nums[i-1];
        }
        
        return nums;
    }
};

// TIME COMPLEXITY : O(N)
// SPACE COMPLEXITY : O(1)
