// THE PROBLEM STATEMENT IS TO FIND AND RETURN THE DECODED ARRAY USING THE ENCODED ARRAY AND THE FIRST ELEMENT OF THE DECODED ARRAY.
// THE ARRAY ARR = [1,0,2,1] IS ENCODED AS ENCODED = [1,2,3] WHERE ENCODED[I] = ARR[I] XOR ARR[I+1]. WE HAVE TO RETURN THE ARRAY ARR FROM THE ENCODED ARRAY
// AND THE FIRST ELEMENT OF THE ARRAY ARR.

// MY APPROACH IS TO DECLARE AND INITIALISE THE DECODED ARRAY OF LENGTH (ENCODED.LENGTH + 1), THEN WE SET THE FIRST VALUE OF THE DECODED ARRAY TO THE FIRST VALUE.
// THEN WE TRAVERSE FROM INDEX 1 TO ENCODED.LENGTH, AT EACH INDEX DECODED[I] = ENCODED[I-1]^DECODED[I-1], WHICH WILL YIELD THE DECODED ARRAY.

class Solution {
    public int[] decode(int[] encoded, int first) {
        int[] decoded = new int[encoded.length+1];
        decoded[0] = first;
        
        // TRAVERSING FROM 1 TO ENCODED.LENGTH.
        for(int i=1;i<=encoded.length;i++)
        {
            decoded[i] = decoded[i-1]^encoded[i-1];
        }
        
        return decoded;
    }
}

// TIME COMPLEXITY : O(N) WHERE N IS THE LENGTH OF THE ENCODED ARRAY.
// SPACE COMPLEXITY : O(N+1)
